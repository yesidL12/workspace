:root{
    --blanco: #ffffff;
    --oscuro:#212121;
    --primario:#ffc107;
    --secundario:#0097a7;
    --gris: #757575;
}

html{
    font-size: 62.5%;
    box-sizing: border-box; /*Optimiza el box model*/
}

*, *:before, *::after{ /*Optimiza el box model*/
    box-sizing: inherit;
}
/*Estas dos lineas optimizan el uso de los rem (la de arriba y la e abajo)*/
body{
    font-size: 16px; /*1rem = 10px*/
}

.titulo{
    text-align: center;
    font-size: 3.8rem;
}

.titulo span{
    font-size: 2rem;
}

.contenedor{
    max-width: 120rem;
    margin: 0 auto;
}

.nav-background{
    background-color: var(--secundario);
}

.navegacion-principal{
   display: flex;
   flex-direction: column;
   align-items: center; /*Alinea el contenido verticalmente*/
}

@media (min-width: 768px) {
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between; /*Alinea el contenido horizontalmente*/
    }
}

/*
Tamaños estandar 
-- 480px ==> telefonos
-- 768px ==> tablets
-- 1140px ==> laptos
*/

/*
<-------- Los 2 ejes de flexbox --------->
Solo puedes colocar los elementos en una dirección
-- fila (row), 0
-- columna (column).
*/

.navegacion-principal a{
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
   padding: 1rem; /*Del elemento hacía adentro*/
}

.navegacion-principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}
/*
-Display: block: ==> Siognifa que todo el contenido se va a organizar uno encima de otro

-Display: Inline: ==> Significa que el contenido se pocisionará a la derecha una vez haya tomado todo el espacio que requiere.*/

.hero{
    background-image: url(../hero.jpg);
    background-repeat: no-repeat; /* Hace que la imagen no se repita*/
    background-size: cover;/*Hace que la imagen cubra todo el espacio disponible*/
    height: 450px;
    position: relative; /* <== Elemento padre*/
    
    /*Para pósicionar elementos con position absolute
    el elemento padre, debe ser position relative*/


}

/**
<---------Box Model---------->
El tamaño de lo que se muestra en pantalla esta delimitado por 4 cosas:
- tamaño de contenido
- tamaño de relleno (padding)
- tamaño del borde, y
- el margen.*/

.contenido-hero{
    position: absolute; /* <== Elemento hijo*/
    background-color: rgb(0 0 0 / 70%);
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    /*En display flex, flex-direction:row alineas verticalmente con justify-content, y
    horizontalmente con align-items.
    
    Con flex-direction:column, alineas verticalmente con alig items, y
    horizontalmente con justify-content*/

}